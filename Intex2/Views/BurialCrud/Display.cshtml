@model PaginatedList<Intex2.Models.Burial>

@{
    ViewData["Title"] = "Index";
}



<style>
    body {
        background-color: #E9ECEF;
    }
</style>
<br />


<div class="card shadow mb-3" style="max-width: auto">
    <div class="container m-3 p-2">
        <h2>Search Results</h2>

        <form asp-action="Display" method="get">
            <div class="form-actions no-color">
                <p>
                    Search: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                </p>
            </div>
        </form>

        <table class="table">
            <thead>
                <tr>
                    <th>
                        <a style="display: inline;" asp-action="Display" asp-route-sortOrder="@ViewData["IdSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Burial Id</a>
                    </th>
                    <th>
                        <a style="display: inline;" asp-action="Display" asp-route-sortOrder="@ViewData["SexSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Sex</a>
                    </th>
                    <th>
                        <a style="display: inline;" asp-action="Display" asp-route-sortOrder="@ViewData["SquareSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Area</a>
                    </th>
                    <th>
                        <a style="display: inline;" asp-action="Display" asp-route-sortOrder="@ViewData["LengthSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Length</a>
                    </th>
                    <th>
                        <a style="display: inline;" asp-action="Display" asp-route-sortOrder="@ViewData["DepthSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Depth</a>
                    </th>
                    <th>
                        <a style="display: inline;" asp-action="Display" asp-route-sortOrder="@ViewData["DirectionSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Burial Direction</a>
                    </th>
                    <th>
                        <a style="display: inline;" asp-action="Display" asp-route-sortOrder="@ViewData["EorWSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">East or West</a>
                    </th>
                    <th>
                        <a style="display: inline;" asp-action="Display" asp-route-sortOrder="@ViewData["NorSSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">North or South</a>
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var mummy in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => mummy.BurialId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => mummy.GenderCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => mummy.Square)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => mummy.LengthM)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => mummy.BurialDepth)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => mummy.BurialDirection)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => mummy.EastOrWest)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => mummy.NorthOrSouth)
                        </td>
                        <td>
                            <a class="text-center btn btn-info" asp-area="" asp-route-id="@mummy.BurialId" asp-controller="BurialCrud" asp-action="Details">Details</a>

                            @if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdministratorRole")).Succeeded)
                            {
                                <a class="text-center btn btn-warning" asp-controller="BurialCrud" asp-action="Edit" asp-route-id="@mummy.BurialId">Edit</a>
                            }

                            @if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdministratorRole")).Succeeded)
                            {
                                <a class="text-center btn btn-danger" asp-controller="BurialCrud" asp-action="Delete" asp-route-id="@mummy.BurialId">Delete</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }

        <a asp-action="Display"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @prevDisabled">
            Previous
        </a>
        <a asp-action="Display"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @nextDisabled">
            Next
        </a>
    </div>
</div>